{"version":3,"file":"index.cjs.js","sources":["../src/index.js"],"sourcesContent":["import {readFile as origReadFile, writeFile as origWriteFile} from 'fs';\nimport {promisify} from 'util';\nimport {basename} from 'path';\n\nconst fileSize = require('filesize');\nconst gzip = require('gzip-size');\nconst terser = require('terser');\nconst brotli = require('brotli-size');\nconst badgeUp = require('badge-up').v2;\nconst template = require('es6-template-strings');\n\nconst readFile = promisify(origReadFile);\nconst writeFile = promisify(origWriteFile);\n\nconst sizeTypeMap = new Map([\n  ['bundleSize', {text: 'Bundle size'}],\n  ['brotliSize', {text: 'Brotli size', showProperty: 'showBrotliSize'}],\n  ['minSize', {text: 'Min size', showProperty: 'showMinifiedSize'}],\n  ['gzipSize', {text: 'Gzip size', showProperty: 'showGzippedSize'}]\n]);\n\n/**\n* @external FileSizeFormat\n* @see https://github.com/avoidwork/filesize.js#optional-settings\n*/\n\n/**\n* @typedef {PlainObject} RollupPluginFilesizeShowOptions\n* @property {boolean} showBrotliSize\n* @property {boolean} showMinifiedSize\n* @property {boolean} showGzippedSize\n*/\n\n/**\n* @typedef {RollupPluginFilesizeShowOptions} RollupPluginFilesizeOptions\n* @property {FileSizeFormat} format\n*/\n\n/**\n * Mostly a stripped down reimplementation of `rollup-plugin-filesize`'\n * `getData` method.\n * @param {string} code\n * @param {RollupPluginFilesizeOptions} opts\n * @returns {Promise<RollupPluginFilesizeInfo>} Does not add `fileName` (nor\n * `*before` properties as used and built in `rollup-plugin-filesize`)\n */\nasync function getFilesizesForCode (code, opts) {\n  const info = {\n    bundleSize: fileSize(Buffer.byteLength(code), opts.format),\n    brotliSize: opts.showBrotliSize\n      ? fileSize(brotli.sync(code), opts.format)\n      : ''\n  };\n\n  if (opts.showMinifiedSize || opts.showGzippedSize) {\n    const {code: minifiedCode} = await terser.minify(code);\n    info.minSize = opts.showMinifiedSize\n      ? fileSize(minifiedCode.length, opts.format)\n      : '';\n    info.gzipSize = opts.showGzippedSize\n      ? fileSize(await gzip(minifiedCode), opts.format)\n      : '';\n  }\n\n  return info;\n}\n\n/**\n * @param {\"bundleSize\"|\"brotliSize\"|\"minSize\"|\"gzipSize\"} sizeType\n * @returns {string} Human-readable for type (e.g., \"Bundle size\")\n */\nfunction getSizeText (sizeType) {\n  return sizeTypeMap.get(sizeType).text;\n}\n\n/**\n* @typedef {PlainObject} RollupPluginFilesizeInfo\n* @property {string} fileName\n* @property {string} bundleSize\n* @property {string} brotliSize\n* @property {string} minSize\n* @property {string} gzipSize\n*/\n\n/**\n* @typedef {PlainObject} RollupOutputOptions\n* @property {string} file\n*/\n\n/* eslint-disable max-len */\n/**\n* @typedef {PlainObject} RollupPluginFilesizeBadger\n* @property {string} [outputPath='filesize-badge.svg']\n* @property {string} [textTemplate='File size (${filePath})']\n* @property {string} [sizeTemplate='${sizeType}: ${size}']\n* @property {string[]} [sizeTypes=['bundleSize', 'brotliSize', 'minSize', 'gzipSize']]\n* @property {string[][]} [sizeColors=[['orange'], ['blue'], ['green'], ['indigo']]]\n* @property {string[]} [textColor=['navy']]\n*/\n/* eslint-enable max-len */\n\n// This should be an intersection really, not a union, but not\n//  currently available in jsdoc/Closure\n/**\n * @param {RollupPluginFilesizeBadger|RollupPluginFilesizeShowOptions\n * |RollupPluginFilesizeInfo|RollupOutputOptions} cfg\n * @returns {Promise<void>}\n */\nasync function filesizeBadger (cfg) {\n  // For consistent behavior, we use the same defaults as\n  //   `rollup-plugin-filesize`\n  const rollupPluginFilesizeShowOptionsDefaults = {\n    showMinifiedSize: true,\n    showGzippedSize: true,\n    showBrotliSize: false\n  };\n\n  // Define object before destructuring so we can get\n  //  properties dynamically later\n  const cfgConstObj = {\n    ...rollupPluginFilesizeShowOptionsDefaults,\n    ...cfg\n  };\n\n  const {\n    outputPath = 'filesize-badge.svg',\n    /* eslint-disable no-template-curly-in-string */\n    textTemplate = 'File size (${filePath})',\n    sizeTemplate = '${sizeType}: ${size}',\n    /* eslint-enable no-template-curly-in-string */\n\n    // Output options\n    file: filePath,\n\n    // Use this to determine call to `getFilesizesForCode (code, {format})`\n    filesizeFormat,\n\n    showBrotliSize,\n    showMinifiedSize,\n    showGzippedSize,\n\n    logging,\n\n    // Filesize info results\n    fileName = basename(filePath)\n  } = cfgConstObj;\n\n  if (!outputPath || typeof outputPath !== 'string') {\n    throw new TypeError('Bad output path provided.');\n  }\n\n  const log = (...args) => {\n    if (logging && logging !== 'off') {\n      // eslint-disable-next-line no-console\n      console.log(...args);\n    }\n  };\n\n  // Handle CLI type conversions\n  // Define object before destructuring so we can get\n  //  properties dynamically later\n  const cfgLetObj = {\n    ...(filesizeFormat\n      ? getFilesizesForCode(\n        await readFile(filePath, 'utf8'),\n        {\n          // Putting these lines together was apparently tripping up istanbul\n          format:\n            typeof filesizeFormat === 'string'\n              ? JSON.parse(filesizeFormat)\n              : filesizeFormat,\n          showBrotliSize,\n          showMinifiedSize,\n          showGzippedSize\n        }\n      )\n      : ''\n    ),\n    ...cfg\n  };\n\n  let {\n    textColor = ['navy'],\n    sizeTypes = ['bundleSize', 'brotliSize', 'minSize', 'gzipSize'],\n    sizeColors = [['orange'], ['blue'], ['green'], ['indigo']],\n    bundleSize,\n    brotliSize,\n    minSize,\n    gzipSize\n  } = cfgLetObj;\n\n  if (typeof textColor === 'string') {\n    textColor = textColor.split(',');\n  }\n\n  if (sizeTypes && typeof sizeTypes === 'string') {\n    sizeTypes = sizeTypes.split(',');\n  }\n  if (Array.isArray(sizeColors) && !Array.isArray(sizeColors[0])) {\n    sizeColors = sizeColors.map((sizeColor) => {\n      return sizeColor.split(',');\n    });\n  }\n\n  log({\n    outputPath,\n    filePath,\n    fileName,\n    textTemplate,\n    textColor,\n    bundleSize, brotliSize, minSize, gzipSize,\n    sizeTypes,\n    sizeColors\n  });\n\n  const sections = [\n    ...(textTemplate\n      ? [[template(textTemplate, {\n        filePath,\n        fileName, bundleSize, brotliSize, minSize, gzipSize\n      }), ...textColor]]\n      : []),\n    ...(sizeTypes\n      ? sizeTypes.map((sizeTypeCode, i) => {\n        const {showProperty} = sizeTypeMap.get(sizeTypeCode);\n        if (typeof showProperty === 'string' && !cfgConstObj[showProperty]) {\n          return false;\n        }\n        const size = cfgLetObj[sizeTypeCode];\n        const sizeType = getSizeText(sizeTypeCode);\n        log({\n          sizeTemplate,\n          sizeType,\n          sizeTypeCode,\n          filePath,\n          fileName,\n          size\n        });\n        return [template(sizeTemplate, {\n          sizeType,\n          filePath,\n          fileName,\n          size\n        }), ...sizeColors[i]];\n      }).filter((tmplt) => tmplt)\n      : '')\n  ];\n\n  log('Sections', sections);\n\n  const svg = await badgeUp(sections);\n  await writeFile(outputPath, svg);\n  log(`Finished writing to ${outputPath}!`);\n}\n\n/**\n* @callback RollupPluginFilesizeCallback\n* @param {RollupPluginFilesizeOptions} opts\n* @param {RollupOutputOptions} outputOptions\n* @param {RollupPluginFilesizeInfo} info\n* @returns {Promise<void>}\n*/\n\n/**\n * @param {RollupPluginFilesizeBadger} cfg\n * @returns {RollupPluginFilesizeCallback}\n */\nfunction rollupPluginFilesizeBadger ({\n  outputPath, textTemplate, sizeTemplate, sizeTypes,\n  sizeColors, textColor\n} = {}) {\n  return function (opts, outputOptions, info) {\n    const {\n      showBrotliSize,\n      showMinifiedSize,\n      showGzippedSize\n    } = opts;\n    const {\n      fileName,\n      bundleSize, brotliSize, minSize, gzipSize\n    } = info;\n    const {file} = outputOptions;\n\n    return filesizeBadger({\n      outputPath, textTemplate, sizeTemplate, sizeTypes,\n      sizeColors, textColor,\n\n      file,\n      fileName,\n      bundleSize, brotliSize, minSize, gzipSize,\n\n      showBrotliSize,\n      showMinifiedSize,\n      showGzippedSize\n    });\n  };\n}\n\nexport {filesizeBadger, getFilesizesForCode, rollupPluginFilesizeBadger};\n"],"names":["promisify","origReadFile","origWriteFile","basename"],"mappings":"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"}